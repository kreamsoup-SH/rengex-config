# 가져오기 단계에서 추출할 텍스트의 정규식 파일입니다. 기본값으로 파일 전체를 번역합니다.
# 파일 전체가 하나의 정규식이고, #으로 시작하는 줄은 주석으로 처리됩니다.# (?<영문이름>)으로 감싼 그룹의 내용만 추출합니다.
# 닷넷 정규식 문법 URL: https://docs.microsoft.com/ko-kr/dotnet/standard/base-types/regular-expression-language-quick-reference
# 정규식 테스트 URL: https://regex101.com/r/IQeg4l/1

# RPG Maker MV .json 파일 대응 추출 정규식

# 문자열 아닌 것 스킵
[^"]+

# The followings are all exception rules except the last one.

# Actors.json
# {"id":1,"battlerName":"","characterIndex":0,"characterName":"$043_마하","classId":1,"equips":[1,11,2]
|"characterName"\s*:\s*"(?>\\.|[^"\n])*"\s*,\s*"classId"\s*:
# "faceIndex":0,"faceName":"サシャ顔１","traits":[]
|"faceIndex"\s*:\s*\d+\s*,\s*"faceName"\s*:\s*"(?>\\.|[^"\n])*"\s*

# First word of code 356 parameters is plugin command and following words are arguments separated by half-width space.
# https://kinoar.github.io/rmmv-doc-web/classes/game_interpreter.html#plugincommand
# Map061.json: [{"code":356,"indent":0,"parameters":["<NES말풍선 대상:1>"]},..
# CommonEvents.json: {"code":356,"indent":0,"parameters":["ピクチャのボタン化 2 113 4 OFF"]}
|"code":\s*?356,\s*?"indent":\s*?\d+?,\s*?"parameters":\[\s*?"\s*?(?>[^\s"]+)\s+?
(?:(?:
  # 일본어가 들어있으면 추출.
  (?<arg3>
    # 공백이 나오면 다음 인자로 취급하므로 번역 이후 공백을 제거해야 함.
    (?>\\.|[^" ])*[\jp](?>\\.|[^" ])*
  )
  # 없으면 무시
  |(?>\\.|[^" ])*
# 다음 인자 추출
)[ ]*?)*?
"

# Tilesets.json에 들어있는 이미지 파일명 배열 스킵
|"tilesetNames"\s*:\s*\[(
  # 파일명 문자열
  "(?>\\.|[^"\n])*"
  # , 등 다른 내용
  |[^"\]]+
)*?\]

# Enemies.json
# "battlerHue":0,"battlerName":"슬라임 퀸","dropItems"
|"battlerHue"\s*:\s*\d+\s*,\s*"battlerName"\s*:\s*"(?>\\.|[^"\n])*?"

# Map___.json에 들어있는 이미지 파일명 스킵
# Map004.json: ,{"code":101,"indent":0,"parameters":["사샤얼굴 2",7,0,2]}
|"code"\s*:\s*101\s*,\s*"indent"\s*:\s*\d+\s*,\s*"parameters"\s*:\s*\[\s*"(?>\\.|[^"\n])*?"
# Map004.json: {"code":231,"indent":0,"parameters":[30,"사샤 1＿통상",0,1,25,26,100,100,255,0]}
|"code"\s*:\s*231\s*,\s*"indent"\s*:\s*\d+\s*,\s*"parameters"\s*:\s*\[\s*\d+\s*,\s*"(?>\\.|[^"\n])*?"
# Map019.json: "note":"<fgName:! 마을 외관> <fgLoopY:0> <fgLoopX:0>\n\n\n",
|"note"\s*:\s*"(?>\\.|[^"\n])*?<fgName:.*?>(?>\\.|[^"\n])*?"
# Map022.json: image":{"tileId":0,"characterName":"$008_아저씨","direction":2,"pattern":1,"characterIndex":0},
|"tileId"\s*:\s*\d+\s*,"characterName"\s*:\s*"(?>\\.|[^"\n])*"
# Map034.json: {"code": 41,"parameters":["$043_마하",0],"indent":null}
|(?<={)"code"\s*:\s*41\s*,\s*"parameters"\s*:\s*\[\s*"(?>\\.|[^"\n])*".*?\]\s*,\s*"indent"
# Map046.json: "parallaxLoopY":false,"parallaxName":"하늘 2","parallaxShow":
|"parallaxLoopY"\s*:\s*(false|true)\s*,\s*"parallaxName"\s*:\s*"(?>\\.|[^"\n])*"\s*,\s*"parallaxShow"\s*:

# Map___.json에 들어가는 img/parallax 파일명 스킵
# {"code":284,"indent":1,"parameters":["午前",false,false,0,0]}
|"code"\s*?:\s*?284\s*?,\s*?"indent"\s*?:\s*?\d+\s*?,\s*?"parameters"\s*?:\s*?\[\s*?"(?>\\.|[^"\n])*"

# Map___.json에 들어가는 img/characters 파일명 스킵
# {"code":322,"indent":1,"parameters":[1,"キャラクター１_MV",3,"",0,""]}
|"code"\s*?:\s*?322\s*?,\s*?"indent"\s*?:\s*?\d+\s*?,\s*?"parameters"\s*?:\s*?\[.*?,"(?>\\.|[^"\n])*"

# Map___.json에 들어있는 사운드 파일명 스킵
# 배경음: {"code":241,"indent":0,"parameters":[{"name":"04_学園街","volume":30,"pitch":100,"pan":0}]}
# 효과음: {"code":250,"indent":0,"parameters":[{"name":"Move1","pan":0,"pitch":100,"volume":90}]}
# name이 키로 나오면
|"name"\s*:\s*
# 사운드 파일명 문자열로 의심
"(?>\\.|[^"\n])*"
# pan이나 volume키가 나오는지 검사
\s*,\s*"(pan|volume)"\s*:

# Map___.json에 들어있는 명칭 스킵
# Map025.json: {"code":357,"indent":0,"parameters":["Nore_Tes","Run","実行",{"id":"称号説明"}]},
#              {"code":657,"indent":0,"parameters":["ファイル名 = 称号説明"]}
|"code":357\s*,[^}]*?"id":".*?"

# Angle bracket directives appears commonly.
# Actors.json: {"id":1,"battlerName":"", ... "maxLevel":50,"name":"ソフィー","nickname":"探偵見習い","note":"<CSS_画像:sophie_status>\nImage Position 0\nbgi offset X: 0\nbgi offset Y: 0\n</CSS_画像>\n\n<CSS_画像:sophie2_status>\nImage Position 0\nbgi offset X: 0\nbgi offset Y: 0\n</CSS_画像>\n\n<CSS_画像:sophie3_status>\nImage Position 0\nbgi offset X: 0\nbgi offset Y: 0\n</CSS_画像>\n","profile":""},
# Items.json: {"id":81,"animationId":0, ... ,"itypeId":3,"name":"みみず退治","note":"<SG説明:\\c[2]へびみみずの退治\\c[0]\n報酬：1000G\n依頼主：農地の人\n概要：へびみみず退治\n　　　畑にへびみみずが出て大変なんだ\n　　　退治してくれないか？\n>\n","occasion":3, ...
# Map061.json: [{"code":356,"indent":0,"parameters":["<NES말풍선 대상:1>"]},..
|"
(?:
  # 일반 텍스트
  (?:
    # 일본어가 들어있으면 추출
    (?<val2>(?>\\.|[^<"])*?[\jp](?>\\.|[^<"])*?)
    # 없으면 무시
    |(?>\\.|[^<"])*?
  )

  # 태그
  </?(?>\\.|[^>"])*?
  # 인자
  (?: : (?:
    # 일본어가 들어있으면 추출
    (?<arg>(?>\\.|[^>"])*?[\jp](?>\\.|[^>"])*?)
    # 없으면 무시
    |(?>\\.|[^>"])*?
  ))?>
)*?
# 일반 텍스트
(?:
  # 일본어가 들어있으면 추출
  (?<val>(?>\\.|[^<"])*?[\jp](?>\\.|[^<"])*?)
  # 없으면 무시
  |(?>\\.|[^<"])*?
)
# 뒤에 :이 나오면 키이므로 위험
"(?!\s*:)

# 앞에서 걸러진 키 문자열은 스킵.
|"(?>\\.|[^"\n])*"
